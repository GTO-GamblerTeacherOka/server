version: '3'

services:
  redis:
    image: redis:alpine
    restart: always
    volumes:
      - "./data/redis:/data"
    networks:
      virce-network:
        ipv4_address:
          10.254.0.100
  
  mysql:
    image: mysql:latest
    restart: always
    volumes:
        - "./data/mysql:/var/lib/mysql"
        - "./MySQL:/docker-entrypoint-initdb.d"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: virce
      MYSQL_USER: virce
      MYSQL_PASSWORD: virce
    networks:
      virce-network:
        ipv4_address:
          10.254.0.200
  
  loadbalancer:
    image: nginx:latest
    ports:
      - "5000:5000/udp"
    restart: always
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    networks:
      virce-network:
        ipv4_address:
          10.254.0.2
  
  virce-server1:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on: 
      - redis
      - mysql
      - loadbalancer
    environment:
      REDIS_HOST: 10.254.0.100
      MYSQL_HOST: 10.254.0.200
    networks:
      virce-network:
        ipv4_address:
          10.254.0.11

  virce-server2:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - mysql
      - loadbalancer
    environment:
      REDIS_HOST: 10.254.0.100
      MYSQL_HOST: 10.254.0.200
    networks:
      virce-network:
        ipv4_address:
          10.254.0.12

  virce-server3:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - mysql
      - loadbalancer
    environment:
      REDIS_HOST: 10.254.0.100
      MYSQL_HOST: 10.254.0.200
    networks:
      virce-network:
        ipv4_address:
          10.254.0.13
  
networks:
  virce-network:
    ipam:
      driver: bridge
      config:
        - subnet: 10.254.0.0/16